{
    "name": "fmu-editor",
    "version": "0.0.1",
    "author": "Equinor <noreply@equinor.com>",
    "description": "An open-source editor for creating Webviz dashboards.",
    "license": "MIT",
    "homepage": "./",
    "main": "build/electron/main.js",
    "contributors": [
        "akia@equinor.com",
        "ruben.thoms@ceetronsolutions.com"
    ],
    "repository": {
        "type": "git",
        "url": "git://github.com/equinor/webviz-core-components.git"
    },
    "devDependencies": {
        "@babel/core": "^7.16.0",
        "@pmmmwh/react-refresh-webpack-plugin": "^0.5.3",
        "@svgr/webpack": "^5.5.0",
        "@testing-library/jest-dom": "5.14.1",
        "@testing-library/react": "12.0.0",
        "@trivago/prettier-plugin-sort-imports": "3.1.0",
        "@types/electron-devtools-installer": "2.2.0",
        "@types/jest": "27.0.1",
        "@types/module-alias": "2.0.1",
        "@types/node": "16.11.11",
        "@types/react": "17.0.18",
        "@types/react-dom": "17.0.9",
        "@types/redux-logger": "3.0.9",
        "@types/styled-components": "5.1.12",
        "@types/uuid": "^8.3.4",
        "@typescript-eslint/eslint-plugin": "^5.46.1",
        "@typescript-eslint/parser": "^5.46.1",
        "babel-jest": "^27.4.2",
        "babel-loader": "^8.2.3",
        "babel-preset-react-app": "^10.0.1",
        "case-sensitive-paths-webpack-plugin": "^2.4.0",
        "concurrently": "6.3.0",
        "cross-env": "7.0.3",
        "css-loader": "^6.5.1",
        "css-minimizer-webpack-plugin": "^3.2.0",
        "electron": "16.2.6",
        "electron-builder": "22.11.11",
        "electron-notarize": "1.1.1",
        "electron-reload": "2.0.0-alpha.1",
        "eslint": "^8.3.0",
        "eslint-config-airbnb": "^19.0.4",
        "eslint-config-prettier": "8.3.0",
        "eslint-config-react-app": "^7.0.1",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jsx-a11y": "^6.6.1",
        "eslint-plugin-prettier": "4.0.0",
        "eslint-plugin-react": "^7.31.11",
        "eslint-plugin-react-hooks": "^4.6.0",
        "eslint-plugin-unused-imports": "^2.0.0",
        "eslint-webpack-plugin": "^3.1.1",
        "file-loader": "6.2.0",
        "html-webpack-plugin": "^5.5.0",
        "jest": "^27.4.3",
        "jest-watch-typeahead": "^1.0.0",
        "json-loader": "^0.5.7",
        "lint-staged": "11.2.6",
        "mini-css-extract-plugin": "^2.4.5",
        "monaco-editor-webpack-plugin": "^7.0.1",
        "postcss": "^8.4.4",
        "postcss-flexbugs-fixes": "^5.0.2",
        "postcss-loader": "^6.2.1",
        "postcss-normalize": "^10.0.1",
        "postcss-preset-env": "^8.0.1",
        "prettier": "2.4.1",
        "react-app-alias": "^2.2.2",
        "react-refresh": "^0.11.0",
        "redux-devtools-extension": "2.13.9",
        "resolve-url-loader": "^4.0.0",
        "sass": "^1.56.1",
        "sass-loader": "^12.3.0",
        "standard-version": "9.3.1",
        "style-loader": "^3.3.1",
        "stylelint": "13.13.1",
        "stylelint-config-recommended": "5.0.0",
        "stylelint-config-standard": "22.0.0",
        "stylelint-config-styled-components": "0.1.1",
        "stylelint-processor-styled-components": "1.10.0",
        "tailwindcss": "^3.2.7",
        "terser-webpack-plugin": "^5.2.5",
        "ts-json-schema-generator": "^0.97.0",
        "ts-loader": "^9.4.2",
        "tsconfig-paths-webpack-plugin": "^4.0.0",
        "typescript": "4.3.5",
        "wait-on": "6.0.0",
        "webpack": "^5.64.4",
        "webpack-cli": "^5.0.1",
        "webpack-dev-server": "^4.6.0",
        "worker-loader": "3.0.8"
    },
    "dependencies": {
        "@azure/msal-node-extensions": "^1.0.0-alpha.30",
        "@emotion/react": "^11.5.0",
        "@emotion/styled": "^11.3.0",
        "@equinor/flow-diagram-explorer": "^1.0.0-alpha.6",
        "@microsoft/mgt-components": "^2.8.0",
        "@microsoft/mgt-electron-provider": "^2.8.0",
        "@microsoft/mgt-element": "^2.8.0",
        "@microsoft/mgt-react": "^2.8.0",
        "@mui/icons-material": "^5.2.1",
        "@mui/lab": "^5.0.0-alpha.115",
        "@mui/material": "^5.11.4",
        "@react-hook/size": "^2.1.2",
        "@reduxjs/toolkit": "1.7.1",
        "electron-devtools-installer": "3.2.0",
        "electron-log": "4.4.3",
        "electron-store": "8.0.1",
        "execa": "5.1.1",
        "fs-extra": "^10.1.0",
        "loglevel": "1.8.0",
        "module-alias": "2.2.2",
        "monaco-yaml": "^4.0.0",
        "notistack": "^2.0.8",
        "react": "^17.0.2",
        "react-dev-utils": "^12.0.1",
        "react-dom": "^17.0.2",
        "react-icons": "^4.6.0",
        "react-monaco-editor": "^0.51.0",
        "react-redux": "^8.0.5",
        "redux": "4.1.2",
        "redux-logger": "3.0.6",
        "strip-ansi": "6.0.1",
        "uniqolor": "^1.1.0",
        "uuid": "^8.3.2",
        "web-vitals": "2.1.2"
    },
    "scripts": {
        "start": "NODE_ENV=development BABEL_ENV=development webpack serve --config webpack.config.js --no-open --port 3000 --static ./dist --no-client-overlay --hot",
        "webpack": "webpack --config webpack.config.js",
        "build": "NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=production BABEL_ENV=production webpack build --config webpack.config.js",
        "postinstall": "electron-builder install-app-deps",
        "electron:dev": "concurrently \"cross-env BROWSER=none npm run start\" \"wait-on http://localhost:3000 && tsc -p electron -w\" \"wait-on http://localhost:3000 && tsc -p electron && cross-env NODE_ENV=development electron .\"",
        "electron:dev:msal": "concurrently \"cross-env BROWSER=none npm run start\" \"wait-on http://localhost:3000 && tsc -p electron -w\" \"wait-on http://localhost:3000 && tsc -p electron && cross-env NODE_ENV=development electron --msal-persistence .\"",
        "electron:dev:no-msal": "concurrently \"cross-env BROWSER=none npm run start\" \"wait-on http://localhost:3000 && tsc -p electron && cross-env NODE_ENV=development electron --deactivate-msal .\"",
        "electron:dev:clear": "concurrently \"cross-env BROWSER=none npm run start\" \"wait-on http://localhost:3000 && tsc -p electron && cross-env NODE_ENV=development electron --deactivate-msal --clear-config .\"",
        "electron:debug": "concurrently \"cross-env BROWSER=none npm run start\" \"wait-on http://localhost:3000 && tsc -p electron -w\" \"wait-on http://localhost:3000 && tsc -p electron && cross-env NODE_ENV=development electron --remote-debugging-port=9223 .\"",
        "electron:build": "npm run build && tsc -p electron && electron-builder --publish \"never\"",
        "lint": "npm run lint:config && npm run lint:src ",
        "stylelint": "stylelint  \"./src/**/*.tsx\"",
        "lint:config": "eslint .",
        "lint:src": "eslint \"{src,test}/**/*.{js,jsx,ts,tsx}\"",
        "lintfix": "eslint --fix \"{src,test}/**/*.{js,jsx,ts,tsx}\"",
        "prepush": "npm run lint",
        "format:all": "prettier --write \"{src,test}/**/*.{js,jsx,ts,tsx}\"",
        "release:patch": "standard-version --release-as patch",
        "release:minor": "standard-version --release-as minor",
        "release:major": "standard-version --release-as major"
    },
    "build": {
        "appId": "io.equinor.fmueditor",
        "productName": "fmu-editor",
        "copyright": "Copyright Â© 2023 ${author}",
        "linux": {
            "target": [
                {
                    "target": "AppImage",
                    "arch": [
                        "x64"
                    ]
                }
            ],
            "icon": "../assets/icons/png/",
            "category": "Development",
            "maintainer": "FMU",
            "vendor": "Equinor",
            "executableName": "fmu-editor",
            "synopsis": "Efficiently edit FMU files and log/compare changes.",
            "description": "An editor and source control manager for the FMU directory in Equinor."
        },
        "appImage": {
            "artifactName": "${productName}-${os}-${version}-${arch}.${ext}"
        },
        "asar": true,
        "extends": null,
        "files": [
            "build/**/*",
            "!**/node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}",
            "!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}",
            "!**/node_modules/*.d.ts",
            "!**/node_modules/.bin",
            "!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}",
            "!.editorconfig",
            "!**/._*",
            "!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}",
            "!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}",
            "!**/{appveyor.yml,.travis.yml,circle.yml}",
            "!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}",
            "!**/node_modules/eslint*/**/*",
            "!**/node_modules/@testing-library/**/*",
            "!**/node_modules/@typescript-eslint/**/*",
            "!**/node_modules/typescript/**/*",
            "!**/node_modules/*webpack*/**/*",
            "!**/node_modules/less/**/*",
            "!**/node_modules/babel-runtime/**/*",
            "!**/node_modules/yaml-language-server/lib/umd/**/*",
            "!**/node_modules/antd/es/**/*",
            "!**/node_modules/@jest/**/*",
            "!**/node_modules/monaco-editor/min/**/*",
            "!**/node_modules/monaco-editor/min-maps/**/*",
            "!**/docs/**/*",
            "!notarization/**/*"
        ],
        "extraResources": [
            {
                "from": "assets",
                "to": "assets"
            },
            {
                "from": "resources",
                "to": "resources"
            },
            {
                "from": "resources",
                "to": "app"
            }
        ],
        "directories": {
            "buildResources": "assets"
        }
    },
    "lint-staged": {
        "{src,test}/**/*.{js,jsx,ts,tsx}": [
            "prettier --write"
        ]
    },
    "eslintConfig": {
        "extends": [
            "react-app",
            "react-app/jest"
        ]
    },
    "browserslist": {
        "production": [
            "last 1 chrome version"
        ],
        "development": [
            "last 1 chrome version"
        ]
    },
    "jest": {
        "roots": [
            "<rootDir>/src"
        ],
        "collectCoverageFrom": [
            "src/**/*.{js,jsx,ts,tsx}",
            "!src/**/*.d.ts"
        ],
        "setupFiles": [
            "react-app-polyfill/jsdom"
        ],
        "setupFilesAfterEnv": [
            "<rootDir>/src/setupTests.ts"
        ],
        "testMatch": [
            "<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}",
            "<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}"
        ],
        "testEnvironment": "jsdom",
        "transform": {
            "^.+\\.(js|jsx|mjs|cjs|ts|tsx)$": "<rootDir>/config/jest/babelTransform.js",
            "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
            "^(?!.*\\.(js|jsx|mjs|cjs|ts|tsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
        },
        "transformIgnorePatterns": [
            "[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs|cjs|ts|tsx)$",
            "^.+\\.module\\.(css|sass|scss)$"
        ],
        "modulePaths": [],
        "moduleNameMapper": {
            "^react-native$": "react-native-web",
            "^.+\\.module\\.(css|sass|scss)$": "identity-obj-proxy",
            "^src/(.*)$": "<rootDir>/src/$1",
            "@src/(.+)": "<rootDir>/src/$1"
        },
        "moduleFileExtensions": [
            "web.js",
            "js",
            "web.ts",
            "ts",
            "web.tsx",
            "tsx",
            "json",
            "web.jsx",
            "jsx",
            "node"
        ],
        "watchPlugins": [
            "jest-watch-typeahead/filename",
            "jest-watch-typeahead/testname"
        ],
        "resetMocks": true
    }
}
